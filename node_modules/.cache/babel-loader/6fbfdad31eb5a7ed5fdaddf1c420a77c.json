{"remainingRequest":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify/lib/mixins/colorable/index.js","dependencies":[{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify/lib/mixins/colorable/index.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2ZrdWJvdGEvR2l0L2thZ2dsZWxpa2UtbGVhZGVyYm9hcmQvdnVlX2xlYWRlcmJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9ma3Vib3RhL0dpdC9rYWdnbGVsaWtlLWxlYWRlcmJvYXJkL3Z1ZV9sZWFkZXJib2FyZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS9ma3Vib3RhL0dpdC9rYWdnbGVsaWtlLWxlYWRlcmJvYXJkL3Z1ZV9sZWFkZXJib2FyZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgY29uc29sZUVycm9yIH0gZnJvbSAnLi4vLi4vdXRpbC9jb25zb2xlJzsKCmZ1bmN0aW9uIGlzQ3NzQ29sb3IoY29sb3IpIHsKICByZXR1cm4gISFjb2xvciAmJiAhIWNvbG9yLm1hdGNoKC9eKCN8dmFyXCgtLXwocmdifGhzbClhP1woKS8pOwp9CgpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBuYW1lOiAnY29sb3JhYmxlJywKICBwcm9wczogewogICAgY29sb3I6IFN0cmluZwogIH0sCiAgbWV0aG9kczogewogICAgc2V0QmFja2dyb3VuZENvbG9yOiBmdW5jdGlvbiBzZXRCYWNrZ3JvdW5kQ29sb3IoY29sb3IpIHsKICAgICAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwoKICAgICAgaWYgKHR5cGVvZiBkYXRhLnN0eWxlID09PSAnc3RyaW5nJykgewogICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CiAgICAgICAgY29uc29sZUVycm9yKCdzdHlsZSBtdXN0IGJlIGFuIG9iamVjdCcsIHRoaXMpOyAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dAoKICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgfQoKICAgICAgaWYgKHR5cGVvZiBkYXRhLmNsYXNzID09PSAnc3RyaW5nJykgewogICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CiAgICAgICAgY29uc29sZUVycm9yKCdjbGFzcyBtdXN0IGJlIGFuIG9iamVjdCcsIHRoaXMpOyAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dAoKICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgfQoKICAgICAgaWYgKGlzQ3NzQ29sb3IoY29sb3IpKSB7CiAgICAgICAgZGF0YS5zdHlsZSA9IF9vYmplY3RTcHJlYWQoe30sIGRhdGEuc3R5bGUsIHsKICAgICAgICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogIiIuY29uY2F0KGNvbG9yKSwKICAgICAgICAgICdib3JkZXItY29sb3InOiAiIi5jb25jYXQoY29sb3IpCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAoY29sb3IpIHsKICAgICAgICBkYXRhLmNsYXNzID0gX29iamVjdFNwcmVhZCh7fSwgZGF0YS5jbGFzcywgX2RlZmluZVByb3BlcnR5KHt9LCBjb2xvciwgdHJ1ZSkpOwogICAgICB9CgogICAgICByZXR1cm4gZGF0YTsKICAgIH0sCiAgICBzZXRUZXh0Q29sb3I6IGZ1bmN0aW9uIHNldFRleHRDb2xvcihjb2xvcikgewogICAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CgogICAgICBpZiAodHlwZW9mIGRhdGEuc3R5bGUgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHQKICAgICAgICBjb25zb2xlRXJyb3IoJ3N0eWxlIG11c3QgYmUgYW4gb2JqZWN0JywgdGhpcyk7IC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CgogICAgICAgIHJldHVybiBkYXRhOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIGRhdGEuY2xhc3MgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHQKICAgICAgICBjb25zb2xlRXJyb3IoJ2NsYXNzIG11c3QgYmUgYW4gb2JqZWN0JywgdGhpcyk7IC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CgogICAgICAgIHJldHVybiBkYXRhOwogICAgICB9CgogICAgICBpZiAoaXNDc3NDb2xvcihjb2xvcikpIHsKICAgICAgICBkYXRhLnN0eWxlID0gX29iamVjdFNwcmVhZCh7fSwgZGF0YS5zdHlsZSwgewogICAgICAgICAgY29sb3I6ICIiLmNvbmNhdChjb2xvciksCiAgICAgICAgICAnY2FyZXQtY29sb3InOiAiIi5jb25jYXQoY29sb3IpCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAoY29sb3IpIHsKICAgICAgICB2YXIgX2NvbG9yJHRvU3RyaW5nJHRyaW0kID0gY29sb3IudG9TdHJpbmcoKS50cmltKCkuc3BsaXQoJyAnLCAyKSwKICAgICAgICAgICAgX2NvbG9yJHRvU3RyaW5nJHRyaW0kMiA9IF9zbGljZWRUb0FycmF5KF9jb2xvciR0b1N0cmluZyR0cmltJCwgMiksCiAgICAgICAgICAgIGNvbG9yTmFtZSA9IF9jb2xvciR0b1N0cmluZyR0cmltJDJbMF0sCiAgICAgICAgICAgIGNvbG9yTW9kaWZpZXIgPSBfY29sb3IkdG9TdHJpbmckdHJpbSQyWzFdOwoKICAgICAgICBkYXRhLmNsYXNzID0gX29iamVjdFNwcmVhZCh7fSwgZGF0YS5jbGFzcywgX2RlZmluZVByb3BlcnR5KHt9LCBjb2xvck5hbWUgKyAnLS10ZXh0JywgdHJ1ZSkpOwoKICAgICAgICBpZiAoY29sb3JNb2RpZmllcikgewogICAgICAgICAgZGF0YS5jbGFzc1sndGV4dC0tJyArIGNvbG9yTW9kaWZpZXJdID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBkYXRhOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["../../../src/mixins/colorable/index.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAA,GAAA,MAAA,KAAA;AAEA,SAAA,YAAA,QAAA,oBAAA;;AAEA,SAAA,UAAA,CAAA,KAAA,EAA2C;AACzC,SAAO,CAAC,CAAD,KAAA,IAAW,CAAC,CAAC,KAAK,CAAL,KAAA,CAApB,4BAAoB,CAApB;AACD;;AAED,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,WAAA;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AADF,GAHiB;AAOxB,EAAA,OAAO,EAAE;AACP,IAAA,kBADO,8BACW,KADX,EACyD;AAAA,UAApB,IAAoB,uEAA9C,EAA8C;;AAC9D,UAAI,OAAO,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,OAAO,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,UAAU,CAAd,KAAc,CAAd,EAAuB;AACrB,QAAA,IAAI,CAAJ,KAAA,qBACK,IAAI,CADI,KAAb;AAEE,wCAFW,KAEX,CAFF;AAGE,oCAAmB,KAAnB;AAHF;AADF,OAAA,MAMO,IAAA,KAAA,EAAW;AAChB,QAAA,IAAI,CAAJ,KAAA,qBACK,IAAI,CADI,KAAb,sBAEE,KAFF,EAEW,IAFX;AAID;;AAED,aAAA,IAAA;AA3BK,KAAA;AA8BP,IAAA,YA9BO,wBA8BK,KA9BL,EA8BmD;AAAA,UAApB,IAAoB,uEAA9C,EAA8C;;AACxD,UAAI,OAAO,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,OAAO,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC;AACA,QAAA,YAAY,CAAA,yBAAA,EAFsB,IAEtB,CAAZ,CAFkC,CAGlC;;AACA,eAAA,IAAA;AACD;;AACD,UAAI,UAAU,CAAd,KAAc,CAAd,EAAuB;AACrB,QAAA,IAAI,CAAJ,KAAA,qBACK,IAAI,CADI,KAAb;AAEE,UAAA,KAAK,YAFM,KAEN,CAFP;AAGE,mCAAkB,KAAlB;AAHF;AADF,OAAA,MAMO,IAAA,KAAA,EAAW;AAAA,oCACmB,KAAK,CAAL,QAAA,GAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAnC,CAAmC,CADnB;AAAA;AAAA,YACV,SADU;AAAA,YACV,aADU;;AAEhB,QAAA,IAAI,CAAJ,KAAA,qBACK,IAAI,CADI,KAAb,sBAEG,SAAS,GAAV,QAFF,EAE0B,IAF1B;;AAIA,YAAA,aAAA,EAAmB;AACjB,UAAA,IAAI,CAAJ,KAAA,CAAW,WAAX,aAAA,IAAA,IAAA;AACD;AACF;;AACD,aAAA,IAAA;AACD;AA5DM;AAPe,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\n\nfunction isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/)\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n"],"sourceRoot":""}]}