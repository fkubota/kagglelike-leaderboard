{"remainingRequest":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/thread-loader/dist/cjs.js!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/src/App.vue","mtime":1586346050976},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZmt1Ym90YS9HaXQva2FnZ2xlbGlrZS1sZWFkZXJib2FyZC92dWVfbGVhZGVyYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNjb3JlOiAnLi4uJywKICAgICAgaGVsbG86ICcnLAogICAgICBzdWJEYXRhOiAnJywKICAgICAgcmFua2luZ1RhYmxlOiAnJywKICAgICAgc29ydEJ5OiAncmFuaycsCiAgICAgIHNvcnREZXNjOiBmYWxzZSwKICAgICAgc2VsZWN0aW9uX25hbWU6ICcnLAogICAgICBuYW1lczogWydBJywgJ0InLCAnQyddLAogICAgICBkcm9wZG93bl9mb250OiBbJ0FyaWFsJywgJ0NhbGlicmknLCAnQ291cmllcicsICdWZXJkYW5hJ10sCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogJyMnLAogICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICdyYW5rJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ05hbWUnLAogICAgICAgIHZhbHVlOiAnbmFtZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTY29yZScsCiAgICAgICAgdmFsdWU6ICdzY29yZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdOX1N1Ym1pc3Npb24nLAogICAgICAgIHZhbHVlOiAnbl9zdWJtaXNzaW9uJwogICAgICB9XSwKICAgICAgcGFydGljaXBhbnRzOiBbewogICAgICAgIHJhbms6IDEsCiAgICAgICAgbmFtZTogJ0EnLAogICAgICAgIHNjb3JlOiAxNTksCiAgICAgICAgbl9zdWJtaXNzaW9uOiA2LjAKICAgICAgfSwgewogICAgICAgIHJhbms6IDIsCiAgICAgICAgbmFtZTogJ0InLAogICAgICAgIHNjb3JlOiAyMzcsCiAgICAgICAgbl9zdWJtaXNzaW9uOiA5LjAKICAgICAgfSwgewogICAgICAgIHJhbms6IDMsCiAgICAgICAgbmFtZTogJ0MnLAogICAgICAgIHNjb3JlOiAyNjIsCiAgICAgICAgbl9zdWJtaXNzaW9uOiAxNi4wCiAgICAgIH1dCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVhZEZpbGVBc3luYzogZnVuY3Rpb24gcmVhZEZpbGVBc3luYyhmaWxlKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgogICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKHJlYWRlci5yZXN1bHQpOwogICAgICAgIH07CgogICAgICAgIHJlYWRlci5vbmVycm9yID0gcmVqZWN0OwogICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwogICAgICB9KTsKICAgIH0sCiAgICBmaWxlU2VsZWN0OiBmdW5jdGlvbiBmaWxlU2VsZWN0KGZpbGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNzdjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZnVuYy3ihpNmaWxlU2VsZWN0Jyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnJlYWRGaWxlQXN5bmMoZmlsZSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNzdiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5zdWJEYXRhID0gY3N2OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0U2NvcmU6IGZ1bmN0aW9uIGdldFNjb3JlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZnVuYy3ihpNnZXRTY29yZScpOyAvLyBQT1NUCgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMy9nZXRfc2NvcmUnLCB7CiAgICAgICAgICAgICAgICAgIGFyZ19zdWJEYXRhOiBfdGhpczIuc3ViRGF0YSwKICAgICAgICAgICAgICAgICAgYXJnX3NlbGVjdGlvbl9uYW1lOiBfdGhpczIuc2VsZWN0aW9uX25hbWUKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi5zY29yZSA9IHJlc3BvbnNlLmRhdGEuc2NvcmU7CgogICAgICAgICAgICAgICAgICBfdGhpczIuZ2V0UmFua2luZ1RhYmxlKCk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0UmFua2luZ1RhYmxlOiBmdW5jdGlvbiBnZXRSYW5raW5nVGFibGUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdmdW5jLeKGk2dldFJhbmtpbmdUYWJsZScpOyAvLyBQT1NUCgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMy9nZXRfcmFua2luZ190YWJsZScsIHt9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBfdGhpczMucmFua2luZ1RhYmxlID0gcmVzcG9uc2UuZGF0YS5yYW5raW5nX3RhYmxlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzMy5yYW5raW5nVGFibGUpOwoKICAgICAgICAgICAgICAgIF90aGlzMy51cGRhdGVSYW5raW5nVGFibGUoKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBkYXRlUmFua2luZ1RhYmxlOiBmdW5jdGlvbiB1cGRhdGVSYW5raW5nVGFibGUoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTdXBkYXRlUmFua2luZ1RhYmxlJyk7CiAgICAgIHZhciBwYXJ0aWNpcGFudHMgPSBbXTsKICAgICAgdmFyIGxpbmVzID0gdGhpcy5yYW5raW5nVGFibGUuc3BsaXQoIlxuIik7CiAgICAgIGxpbmVzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICB2YXIgcGFydGljaXBhbnRzRGF0YSA9IGVsZW1lbnQuc3BsaXQoIiwiKTsKICAgICAgICB2YXIgcGFydGljaXBhbnQgPSB7CiAgICAgICAgICByYW5rOiBwYXJ0aWNpcGFudHNEYXRhWzBdLAogICAgICAgICAgbmFtZTogcGFydGljaXBhbnRzRGF0YVsxXSwKICAgICAgICAgIHNjb3JlOiBwYXJ0aWNpcGFudHNEYXRhWzJdLAogICAgICAgICAgbl9zdWJtaXNzaW9uOiBwYXJ0aWNpcGFudHNEYXRhWzNdCiAgICAgICAgfTsKICAgICAgICBwYXJ0aWNpcGFudHMucHVzaChwYXJ0aWNpcGFudCk7CiAgICAgICAgX3RoaXM0LnBhcnRpY2lwYW50cyA9IHBhcnRpY2lwYW50czsKICAgICAgfSk7CiAgICB9CiAgfSwKICAvLyBtb3VudGVkICgpIHsKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2coJ2Z1bmMt4oaTbW91bnRlZCcpOwogICAgY29uc29sZS5sb2codGhpcy5wYXJ0aWNpcGFudHMpOwogICAgdGhpcy5nZXRSYW5raW5nVGFibGUoKTsKICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar color=\"primary\" dark app class='title'>\n      <v-toolbar-title>Data Science Competition #1</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn x-large icon dark @click='getRankingTable'>\n        <v-icon dark>mdi-cached</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-content>\n      <v-container>\n        <v-row>\n          <v-col>\n            <v-select v-model=\"selection_name\" :items='names' label='select your name'> </v-select>\n          </v-col>\n          <v-col>\n            <v-file-input @change='fileSelect' show-size label='selec your submission file' accept='.csv' ></v-file-input>\n          </v-col>\n        </v-row>\n        <v-row justify='end'>\n            <v-btn x-large color='primary' @click='getScore' outlined target='#de'>submit</v-btn>\n        </v-row>\n        <v-list-item-title class=\"title grey--text text--darken-2\" align='center' style='margin-top: 30px'>\n          your submission score is <h2><font color='blue'>{{score}}</font></h2>\n        </v-list-item-title>\n        <v-divider></v-divider>\n        <v-list-item-title class=\"title grey--text text--darken-2\" align='center' style='margin-top: 30px'>\n          Leaderboard\n        </v-list-item-title>\n        <v-data-table\n          :headers=\"headers\" \n          :items=\"participants\" \n          :items-per-page=\"10\" \n          class=\"elevation-1 category-table\"\n          style=\"margin-left: 100px; margin-right: 100px;\" >\n          <template slot=\"items\" slot-scope=\"props\">\n            <td class=\"text-xs-right\">{{ props.item.code }}</td>\n            <td class=\"text-xs-right\">{{ props.item.name }}</td>\n            <td class=\"text-xs-right\">{{ props.item.workerType }}</td>\n          </template>\n        </v-data-table>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n<script>\nimport axios from 'axios'\n  export default {\n    data () {\n      return {\n        score: '...',\n        hello: '',\n        subData: '',\n        rankingTable: '',\n        sortBy: 'rank',\n        sortDesc: false,\n        selection_name: '',\n        names: ['A', 'B', 'C'],\n        dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\n        headers: [\n          {\n            text: '#',\n            align: 'center',\n            sortable: false,\n            value: 'rank',\n          },\n          { text: 'Name', value: 'name'},\n          { text: 'Score', value: 'score'},\n          { text: 'N_Submission', value: 'n_submission' },\n        ],\n        participants: [\n          {\n            rank: 1,\n            name: 'A',\n            score: 159,\n            n_submission: 6.0,\n          },\n          {\n            rank: 2,\n            name: 'B',\n            score: 237,\n            n_submission: 9.0,\n          },\n          {\n            rank: 3,\n            name: 'C',\n            score: 262,\n            n_submission: 16.0,\n          },\n        ],\n      }\n    },\n    methods: {\n      readFileAsync (file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.onload = () => {\n            resolve(reader.result)\n          }\n          reader.onerror = reject\n          reader.readAsText(file)\n        })\n      },\n      async fileSelect(file){\n        console.log('func-↓fileSelect')\n        try {\n          const csv = await this.readFileAsync(file)\n          this.subData = csv\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      async getScore(){\n        console.log('func-↓getScore')\n        // POST\n        await axios.post('http://127.0.0.1:5003/get_score', {\n          arg_subData: this.subData,\n          arg_selection_name: this.selection_name,\n        })\n        .then((response) => {\n          this.score = response.data.score\n          this.getRankingTable()\n        })\n      },\n      async getRankingTable(){\n        console.log('func-↓getRankingTable')\n        // POST\n        await axios.post('http://127.0.0.1:5003/get_ranking_table', {\n        })\n        .then((response) => {\n          this.rankingTable = response.data.ranking_table\n        })\n        console.log(this.rankingTable)\n        this.updateRankingTable()\n      },\n      updateRankingTable() {\n        console.log('func-↓updateRankingTable')\n        const participants = [];\n        const lines = this.rankingTable.split(\"\\n\");\n        lines.forEach(element => {\n          const participantsData = element.split(\",\");\n          const participant = {\n            rank: participantsData[0],\n            name: participantsData[1],\n            score: participantsData[2],\n            n_submission: participantsData[3]\n          };\n          participants.push(participant);\n        this.participants = participants\n        });\n      },\n    },\n    // mounted () {\n    created () {\n      console.log('func-↓mounted')\n      console.log(this.participants)\n      this.getRankingTable()\n    }\n  }\n</script>"],"sourceRoot":"src"}]}