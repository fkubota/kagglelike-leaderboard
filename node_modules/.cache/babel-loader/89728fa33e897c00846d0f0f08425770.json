{"remainingRequest":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify/lib/components/VTabs/VTabsBar.js","dependencies":[{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify/lib/components/VTabs/VTabsBar.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2ZrdWJvdGEvR2l0L2thZ2dsZWxpa2UtbGVhZGVyYm9hcmQvdnVlX2xlYWRlcmJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZmt1Ym90YS9HaXQva2FnZ2xlbGlrZS1sZWFkZXJib2FyZC92dWVfbGVhZGVyYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLyBFeHRlbnNpb25zCmltcG9ydCB7IEJhc2VTbGlkZUdyb3VwIH0gZnJvbSAnLi4vVlNsaWRlR3JvdXAvVlNsaWRlR3JvdXAnOyAvLyBNaXhpbnMKCmltcG9ydCBUaGVtZWFibGUgZnJvbSAnLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSc7CmltcG9ydCBTU1JCb290YWJsZSBmcm9tICcuLi8uLi9taXhpbnMvc3NyLWJvb3RhYmxlJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgbWl4aW5zIGZyb20gJy4uLy4uL3V0aWwvbWl4aW5zJzsKZXhwb3J0IGRlZmF1bHQgbWl4aW5zKEJhc2VTbGlkZUdyb3VwLCBTU1JCb290YWJsZSwgVGhlbWVhYmxlCi8qIEB2dWUvY29tcG9uZW50ICovCikuZXh0ZW5kKHsKICBuYW1lOiAndi10YWJzLWJhcicsCiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYnNCYXI6IHRoaXMKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHsKICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIEJhc2VTbGlkZUdyb3VwLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLCB7CiAgICAgICAgJ3YtdGFicy1iYXInOiB0cnVlLAogICAgICAgICd2LXRhYnMtYmFyLS1pcy1tb2JpbGUnOiB0aGlzLmlzTW9iaWxlLAogICAgICAgIC8vIFRPRE86IFJlbW92ZSB0aGlzIGFuZCBtb3ZlIHRvIHYtc2xpZGUtZ3JvdXAKICAgICAgICAndi10YWJzLWJhci0tc2hvdy1hcnJvd3MnOiB0aGlzLnNob3dBcnJvd3MKICAgICAgfSwgdGhpcy50aGVtZUNsYXNzZXMpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGl0ZW1zOiAnY2FsbFNsaWRlcicsCiAgICBpbnRlcm5hbFZhbHVlOiAnY2FsbFNsaWRlcicsCiAgICAkcm91dGU6ICdvblJvdXRlQ2hhbmdlJwogIH0sCiAgbWV0aG9kczogewogICAgY2FsbFNsaWRlcjogZnVuY3Rpb24gY2FsbFNsaWRlcigpIHsKICAgICAgaWYgKCF0aGlzLmlzQm9vdGVkKSByZXR1cm47CiAgICAgIHRoaXMuJGVtaXQoJ2NhbGw6c2xpZGVyJyk7CiAgICB9LAogICAgZ2VuQ29udGVudDogZnVuY3Rpb24gZ2VuQ29udGVudCgpIHsKICAgICAgdmFyIHJlbmRlciA9IEJhc2VTbGlkZUdyb3VwLm9wdGlvbnMubWV0aG9kcy5nZW5Db250ZW50LmNhbGwodGhpcyk7CiAgICAgIHJlbmRlci5kYXRhID0gcmVuZGVyLmRhdGEgfHwge307CiAgICAgIHJlbmRlci5kYXRhLnN0YXRpY0NsYXNzICs9ICcgdi10YWJzLWJhcl9fY29udGVudCc7CiAgICAgIHJldHVybiByZW5kZXI7CiAgICB9LAogICAgb25Sb3V0ZUNoYW5nZTogZnVuY3Rpb24gb25Sb3V0ZUNoYW5nZSh2YWwsIG9sZFZhbCkgewogICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwogICAgICBpZiAodGhpcy5tYW5kYXRvcnkpIHJldHVybjsKICAgICAgdmFyIGl0ZW1zID0gdGhpcy5pdGVtczsKICAgICAgdmFyIG5ld1BhdGggPSB2YWwucGF0aDsKICAgICAgdmFyIG9sZFBhdGggPSBvbGRWYWwucGF0aDsKICAgICAgdmFyIGhhc05ldyA9IGZhbHNlOwogICAgICB2YXIgaGFzT2xkID0gZmFsc2U7CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoaXRlbXMpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgaXRlbSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgaWYgKGl0ZW0udG8gPT09IG5ld1BhdGgpIGhhc05ldyA9IHRydWU7ZWxzZSBpZiAoaXRlbS50byA9PT0gb2xkUGF0aCkgaGFzT2xkID0gdHJ1ZTsKICAgICAgICAgIGlmIChoYXNOZXcgJiYgaGFzT2xkKSBicmVhazsKICAgICAgICB9IC8vIElmIHdlIGhhdmUgYW4gb2xkIGl0ZW0gYW5kIG5vdCBhIG5ldyBvbmUKICAgICAgICAvLyBpdCdzIGFzc3VtZWQgdGhhdCB0aGUgdXNlciBuYXZpZ2F0ZWQgdG8KICAgICAgICAvLyBhIHBhdGggdGhhdCBpcyBub3QgcHJlc2VudCBpbiB0aGUgaXRlbXMKCiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgaWYgKCFoYXNOZXcgJiYgaGFzT2xkKSB0aGlzLmludGVybmFsVmFsdWUgPSB1bmRlZmluZWQ7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7CiAgICB2YXIgcmVuZGVyID0gQmFzZVNsaWRlR3JvdXAub3B0aW9ucy5yZW5kZXIuY2FsbCh0aGlzLCBoKTsKICAgIHJlbmRlci5kYXRhLmF0dHJzID0gewogICAgICByb2xlOiAndGFibGlzdCcKICAgIH07CiAgICByZXR1cm4gcmVuZGVyOwogIH0KfSk7"},{"version":3,"sources":["../../../src/components/VTabs/VTabsBar.ts"],"names":[],"mappings":";;AAAA;AACA,SAAA,cAAA,QAAA,4BAAA,C,CAKA;;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,WAAA,MAAA,2BAAA,C,CAEA;;AACA,OAAA,MAAA,MAAA,mBAAA;AAQA,eAAe,MAAM,CAAA,cAAA,EAAA,WAAA,EAGnB;AACA;AAJmB,CAAN,CAAA,MAAA,CAKN;AACP,EAAA,IAAI,EADG,YAAA;AAGP,EAAA,OAHO,qBAGA;AACL,WAAO;AACL,MAAA,OAAO,EAAE;AADJ,KAAP;AAJK,GAAA;AASP,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACD;AACL,+BACK,cAAc,CAAd,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CADE,IACF,CADL;AAEE,sBAFK,IAAP;AAGE,iCAAyB,KAHpB,QAAP;AAIE;AACA,mCAA2B,KALtB;AAAP,SAMK,KAAK,YANV;AAQD;AAVO,GATH;AAsBP,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EADA,YAAA;AAEL,IAAA,aAAa,EAFR,YAAA;AAGL,IAAA,MAAM,EAAE;AAHH,GAtBA;AA4BP,EAAA,OAAO,EAAE;AACP,IAAA,UADO,wBACG;AACR,UAAI,CAAC,KAAL,QAAA,EAAoB;AAEpB,WAAA,KAAA,CAAA,aAAA;AAJK,KAAA;AAMP,IAAA,UANO,wBAMG;AACR,UAAM,MAAM,GAAG,cAAc,CAAd,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,IAAA,CAAf,IAAe,CAAf;AAEA,MAAA,MAAM,CAAN,IAAA,GAAc,MAAM,CAAN,IAAA,IAAd,EAAA;AACA,MAAA,MAAM,CAAN,IAAA,CAAA,WAAA,IAAA,sBAAA;AAEA,aAAA,MAAA;AAZK,KAAA;AAcP,IAAA,aAdO,yBAcM,GAdN,EAcM,MAdN,EAciC;AACtC;AACA,UAAI,KAAJ,SAAA,EAAoB;AAEpB,UAAM,KAAK,GAAG,KAAd,KAAA;AACA,UAAM,OAAO,GAAG,GAAG,CAAnB,IAAA;AACA,UAAM,OAAO,GAAG,MAAM,CAAtB,IAAA;AAEA,UAAI,MAAM,GAAV,KAAA;AACA,UAAI,MAAM,GAAV,KAAA;;AATsC,iDAWtC,KAXsC;AAAA;;AAAA;AAWtC,4DAA0B;AAAA,cAA1B,IAA0B;AACxB,cAAI,IAAI,CAAJ,EAAA,KAAJ,OAAA,EAAyB,MAAM,GAA/B,IAAyB,CAAzB,KACK,IAAI,IAAI,CAAJ,EAAA,KAAJ,OAAA,EAAyB,MAAM,GAAN,IAAA;AAE9B,cAAI,MAAM,IAAV,MAAA,EAAsB;AAfc,SAAA,CAkBtC;AACA;AACA;;AApBsC;AAAA;AAAA;AAAA;AAAA;;AAqBtC,UAAI,CAAA,MAAA,IAAJ,MAAA,EAAuB,KAAA,aAAA,GAAA,SAAA;AACxB;AApCM,GA5BF;AAmEP,EAAA,MAnEO,kBAmED,CAnEC,EAmEE;AACP,QAAM,MAAM,GAAG,cAAc,CAAd,OAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAf,CAAe,CAAf;AAEA,IAAA,MAAM,CAAN,IAAA,CAAA,KAAA,GAAqB;AACnB,MAAA,IAAI,EAAE;AADa,KAArB;AAIA,WAAA,MAAA;AACD;AA3EM,CALM,CAAf","sourcesContent":["// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n"],"sourceRoot":""}]}