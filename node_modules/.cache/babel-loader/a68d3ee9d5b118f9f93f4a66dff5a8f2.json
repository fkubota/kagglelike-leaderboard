{"remainingRequest":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js!/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify/lib/components/VSparkline/VSparkline.js","dependencies":[{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/vuetify/lib/components/VSparkline/VSparkline.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/fkubota/Git/kagglelike-leaderboard/vue_leaderboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VSparkline/VSparkline.ts"],"names":[],"mappings":"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","sourcesContent":["// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array as Prop<string[]>,\n      default: () => ([]),\n    },\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array as Prop<SparklineItem[]>,\n      default: () => ([]),\n    },\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array as Prop<SparklineItem[]>,\n      default: () => ([]),\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || this.color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            x1: +(gradientDirection === 'left'),\n            y1: +(gradientDirection === 'top'),\n            x2: +(gradientDirection === 'right'),\n            y2: +(gradientDirection === 'bottom'),\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: this.color || 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          id: this._uid,\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n"],"sourceRoot":""}]}